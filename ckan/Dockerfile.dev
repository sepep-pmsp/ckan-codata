FROM ckan/ckan-dev:2.11

# Install any extensions needed by your CKAN instance
# - Make sure to add the plugins to CKAN__PLUGINS in the .env file
# - Also make sure all provide all extra configuration options, either by:
#   * Adding them to the .env file (check the ckanext-envvars syntax for env vars), or
#   * Adding extra configuration scripts to /docker-entrypoint.d folder) to update
#      the CKAN config file (ckan.ini) with the `ckan config-tool` command
#
# See README > Extending the base images for more details
#
# For instance:
#
### XLoader ###
#RUN pip3 install -e 'git+https://github.com/ckan/ckanext-xloader.git@master#egg=ckanext-xloader' && \ 
#    pip3 install -r ${APP_DIR}/src/ckanext-xloader/requirements.txt && \
#    pip3 install -U requests[security]

### Harvester ###
#RUN pip3 install -e 'git+https://github.com/ckan/ckanext-harvest.git@master#egg=ckanext-harvest' && \
#    pip3 install -r ${APP_DIR}/src/ckanext-harvest/pip-requirements.txt
# will also require gather_consumer and fetch_consumer processes running (please see https://github.com/ckan/ckanext-harvest)

USER root

# Add extensions
RUN pip3 install -e 'git+https://github.com/ckan/ckanext-spatial.git#egg=ckanext-spatial' && \ 
    pip3 install  -r ${APP_DIR}/src/ckanext-spatial/requirements.txt && \
    pip3 install  -e 'git+https://github.com/ckan/ckanext-geoview.git#egg=ckanext-geoview' && \
    pip3 install  -e 'git+https://github.com/ckan/ckanext-pdfview#egg=ckanext-pdfview' && \
    pip3 install  -e 'git+https://github.com/ckan/ckanext-scheming.git@master#egg=ckanext-scheming'

# Clone the extension(s) your are writing for your own project in the `src` folder
# to get them mounted in this image at runtime
#RUN ln -s /srv/app/src/ckanext-codata /srv/app/src/ckan/ckanext/ckanext-codata

# set permissions 
#TODO: find out a better approach
RUN chmod -R 755 /usr/local/lib/python3.10/site-packages

# Copy custom initialization scripts
COPY --chown=ckan-sys:ckan-sys docker-entrypoint.d/* /docker-entrypoint.d/

COPY --chown=ckan-sys:ckan-sys patches ${APP_DIR}/patches

COPY ./ckan_dataset_schema.yaml ${APP_DIR}/src/ckanext-scheming/ckanext/scheming

# Apply any patches needed to CKAN core or any of the built extensions (not the
# runtime mounted ones)

USER ckan

RUN for d in $APP_DIR/patches/*; do \
        if [ -d $d ]; then \
            for f in `ls $d/*.patch | sort -g`; do \
                cd $SRC_DIR/`basename "$d"` && echo "$0: Applying patch $f to $SRC_DIR/`basename $d`"; patch -p1 < "$f" ; \
            done ; \
        fi ; \
    done
